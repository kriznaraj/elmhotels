var _julianjelfs$elmhotels$TryElm$sum = function (numbers) {
	var _p0 = numbers;
	if (_p0.ctor === 'Empty') {
		return 0;
	} else {
		return _p0._0 + _julianjelfs$elmhotels$TryElm$sum(_p0._1);
	}
};
var _julianjelfs$elmhotels$TryElm$Model = F3(
	function (a, b, c) {
		return {numbers: a, names: b, name: c};
	});
var _julianjelfs$elmhotels$TryElm$TextChange = function (a) {
	return {ctor: 'TextChange', _0: a};
};
var _julianjelfs$elmhotels$TryElm$ShowName = {ctor: 'ShowName'};
var _julianjelfs$elmhotels$TryElm$Decrement = {ctor: 'Decrement'};
var _julianjelfs$elmhotels$TryElm$Increment = {ctor: 'Increment'};
var _julianjelfs$elmhotels$TryElm$view = function (model) {
	return A2(
		_elm_lang$html$Html$div,
		{ctor: '[]'},
		{
			ctor: '::',
			_0: A2(
				_elm_lang$html$Html$button,
				{
					ctor: '::',
					_0: _elm_lang$html$Html_Events$onClick(_julianjelfs$elmhotels$TryElm$Decrement),
					_1: {ctor: '[]'}
				},
				{
					ctor: '::',
					_0: _elm_lang$html$Html$text('-'),
					_1: {ctor: '[]'}
				}),
			_1: {
				ctor: '::',
				_0: A2(
					_elm_lang$html$Html$div,
					{ctor: '[]'},
					{
						ctor: '::',
						_0: _elm_lang$html$Html$text(
							_elm_lang$core$Basics$toString(
								_julianjelfs$elmhotels$TryElm$sum(model.numbers))),
						_1: {ctor: '[]'}
					}),
				_1: {
					ctor: '::',
					_0: A2(
						_elm_lang$html$Html$input,
						{
							ctor: '::',
							_0: _elm_lang$html$Html_Attributes$placeholder('Text to add'),
							_1: {
								ctor: '::',
								_0: _elm_lang$html$Html_Events$onInput(_julianjelfs$elmhotels$TryElm$TextChange),
								_1: {ctor: '[]'}
							}
						},
						{ctor: '[]'}),
					_1: {
						ctor: '::',
						_0: A2(
							_elm_lang$html$Html$div,
							{ctor: '[]'},
							{
								ctor: '::',
								_0: _elm_lang$html$Html$text(
									_elm_lang$core$Basics$toString(model.names)),
								_1: {ctor: '[]'}
							}),
						_1: {
							ctor: '::',
							_0: A2(
								_elm_lang$html$Html$button,
								{
									ctor: '::',
									_0: _elm_lang$html$Html_Events$onClick(_julianjelfs$elmhotels$TryElm$Increment),
									_1: {ctor: '[]'}
								},
								{
									ctor: '::',
									_0: _elm_lang$html$Html$text('+'),
									_1: {ctor: '[]'}
								}),
							_1: {
								ctor: '::',
								_0: A2(
									_elm_lang$html$Html$button,
									{
										ctor: '::',
										_0: _elm_lang$html$Html_Events$onClick(_julianjelfs$elmhotels$TryElm$ShowName),
										_1: {ctor: '[]'}
									},
									{
										ctor: '::',
										_0: _elm_lang$html$Html$text('AddName'),
										_1: {ctor: '[]'}
									}),
								_1: {ctor: '[]'}
							}
						}
					}
				}
			}
		});
};
var _julianjelfs$elmhotels$TryElm$Node = F2(
	function (a, b) {
		return {ctor: 'Node', _0: a, _1: b};
	});
var _julianjelfs$elmhotels$TryElm$Empty = {ctor: 'Empty'};
var _julianjelfs$elmhotels$TryElm$Nodea = F2(
	function (a, b) {
		return {ctor: 'Nodea', _0: a, _1: b};
	});
var _julianjelfs$elmhotels$TryElm$addName = F2(
	function (name, names) {
		return A2(_julianjelfs$elmhotels$TryElm$Nodea, name, names);
	});
var _julianjelfs$elmhotels$TryElm$update = F2(
	function (msg, model) {
		var _p1 = msg;
		switch (_p1.ctor) {
			case 'Increment':
				return _elm_lang$core$Native_Utils.update(
					model,
					{
						numbers: A2(_julianjelfs$elmhotels$TryElm$Node, 1, model.numbers)
					});
			case 'Decrement':
				return _elm_lang$core$Native_Utils.update(
					model,
					{
						numbers: A2(_julianjelfs$elmhotels$TryElm$Node, -1, model.numbers)
					});
			case 'ShowName':
				return _elm_lang$core$Native_Utils.update(
					model,
					{
						names: A2(_julianjelfs$elmhotels$TryElm$addName, model.name, model.names)
					});
			default:
				return _elm_lang$core$Native_Utils.update(
					model,
					{name: _p1._0});
		}
	});
var _julianjelfs$elmhotels$TryElm$EmptyList = {ctor: 'EmptyList'};
var _julianjelfs$elmhotels$TryElm$model = {numbers: _julianjelfs$elmhotels$TryElm$Empty, names: _julianjelfs$elmhotels$TryElm$EmptyList, name: ''};
var _julianjelfs$elmhotels$TryElm$main = _elm_lang$html$Html$beginnerProgram(
	{model: _julianjelfs$elmhotels$TryElm$model, view: _julianjelfs$elmhotels$TryElm$view, update: _julianjelfs$elmhotels$TryElm$update})();
